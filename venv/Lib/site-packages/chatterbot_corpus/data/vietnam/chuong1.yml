categories:
    - chuong1
conversations:
    - - 'Nội dung của chương 1'
      - "Chương 1: Giới thiệu\n
        Tin học đại cương (hay lập trình C++), nói chung tinh thần của môn học là cũng dựa phần lớn vào cách lập trình mà chúng đã từng nghiên cứu ở tin học đại cương A1 (lập trình Pascal). Vì vậy đa số những lệnh có trong pascal chúng ta sẽ gặp lại trong ngôn ngữ C++, mặc dù có một số điểm sai khác (như cấu pháp), nhưng nhìn chung mục đích của những lệnh đó hoàn toàn giống với ngôn ngữ Pascal mà chúng ta đã học. Đối với những tập lệnh này chúng ta sẽ không nghiên cứu chi tiết về mặt lý thuyết, mà chủ yếu tập trung vào phần thực hành, vận dụng (có thể dùng phần mềm chuyển ngôn ngữ từ pascal sang C++). Riêng với những tập lệnh đặc thù riêng của C++ chúng ta sẽ nghiên cứu kỹ hơn về phần lý thuyết.\n
        Riêng với những tập lệnh đặc thù riêng của C++ chúng ta sẽ nghiên cứu kỹ hơn về phần lý thuyết.\n
        + Ngôn ngữ lập trình: C++\n
        + Môi trường lập trình: Visual C++ 6.0 hoặc Dev-Cpp\n
        + Bộ giúp đỡ ngôn ngữ (help): MSDN 2001\n
        1.1. Tạo và biên dịch một chương trình C++ trên môi trường Visual C++\n
        Phân tích ví dụ đơn giản: Chương trình “Hello World”\n
        #include <{iostream}>\n
        using namespace std;\n
        int main() {\n
        cout<<”Hello World”<<{endl};\n
        return 0;\n
        }
        "
    - - 'Nội dung của chương 2'
      - "Chương 2: Biến và Kiểu dữ liệu\n
        2.1. Kiểu dữ liệu:\n
        a. Các loại dữ liệu thông dụng:\n
        + Tên kiểu dữ liệu: int ; Ý nghĩa: Kiểu số nguyên\n
        + Tên kiểu dữ liệu: long ; Ý nghĩa: Số nguyên dài\n
        + Tên kiểu dữ liệu: float ; Ý nghĩa: Số thực\n
        + Tên kiểu dữ liệu: bool ; Ý nghĩa: Kiểu logic\n
        + Tên kiểu dữ liệu: char ; Ý nghĩa: Ký tự\n
        b. Kiểu dữ liệu do người dùng định nghĩa\n
        - Từ khoá: typedef\n
        - Cú pháp: typedef tên_kiểu_cũ tên_kiểu_mới\n
        - Ý nghĩa: sau khi khai báo, ta có thể sử dụng tên_kiểu_mới như một kiểu dữ liệu bình thường khác.\n
        2.2. Biến: định nghĩa - Các thành phần của biến - Khai báo biến
        - Mọi biến cần phải khai báo trước khi sử dụng.\n
        - Việc khai báo biến được thực hiện theo cú pháp sau:\n
        Kiểu_dữ_liệu tên_biến;\n
        Kiểu tên_biến = giá_trị_ban_ñầu_của_biến;\n
        Kiểu tên_biến1, tên-biến2,...;\n
        Ví dụ:\n
        int i, j; //i và j là 2 kiểu số nguyên\n
        char a; //a là kiểu ký tự\n
        float f; // f là kiểu số thực\n
        2.3. Biểu thức và toán tử: Biểu thức - Toán tử và ñộ ưu tiên của toán tử
        Tên toán tử (+); Ý nghĩa: cộng; Ví dụ: a+b\n
        Tên toán tử (-); Ý nghĩa: trừ; Ví dụ: a-b\n
        Tên toán tử (*); Ý nghĩa: nhân; Ví dụ: a*b\n
        Tên toán tử (/); Ý nghĩa: chia; Ví dụ: a/b\n
        Tên toán tử (%); Ý nghĩa: chia lấy phần dư; Ví dụ: a%b\n
        Tên toán tử (=); Ý nghĩa: gán; Ví dụ: a=b\n
        2.4. Chuyển đổi kiểu (ép kiểu): Ép kiểu là một thủ thuật khá hay dùng để biến đổi kiểu của một biến, hay một biểu thức sang một kiểu dữ liệu phù hợp với nhu cầu tính toán của chương trình.
        "
